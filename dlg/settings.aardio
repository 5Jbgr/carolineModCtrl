import fonts.fontAwesome;
import win.ui;
import myutil.config;
import fsys.dlg.dir;
import console;
import debug.log;
import myutil.dlg;
/*DSG{{*/
var settings = win.form(text="设置";right=759;bottom=469)
settings.add(
about_button={cls="button";text="关于";left=648;top=432;right=728;bottom=456;db=1;dr=1;z=11};
client_combobox={cls="combobox";left=448;top=128;right=608;bottom=152;aw=1;dr=1;dt=1;edge=1;items={};mode="dropdown";z=6};
client_static={cls="static";text="客户端类型：";left=350;top=128;right=447;bottom=154;align="right";center=1;dr=0.41;dt=1;font=LOGFONT(h=-14);transparent=1;z=7};
copy2_radiobutton={cls="radiobutton";text="复制";left=80;top=264;right=136;bottom=288;dl=1;dt=1;z=16};
copy_radiobutton={cls="radiobutton";text="复制";left=80;top=200;right=136;bottom=224;dl=1;dt=1;z=13};
db_edit={cls="edit";left=560;top=176;right=608;bottom=198;aw=1;dr=1;dt=1;edge=1;hidesel=1;num=1;z=21};
db_static={cls="static";text="数据库备份保留：";left=376;top=176;right=559;bottom=198;align="right";center=1;dr=0.26;dt=1;font=LOGFONT(h=-14);transparent=1;z=20};
db_static1={cls="static";text="天";left=616;top=176;right=651;bottom=198;dr=1;dt=1;font=LOGFONT(h=-14);transparent=1;z=22};
game_static={cls="static";text="游戏目录：";left=21;top=48;right=149;bottom=74;align="right";center=1;dl=1;dt=1;font=LOGFONT(h=-14);transparent=1;z=2};
gamepath_plus={cls="plus";left=152;top=48;right=560;bottom=74;align="right";border={bottom=1;color=-6908266};dl=1;dr=1;dt=1;font=LOGFONT(h=-13);textPadding={top=6;bottom=2};z=1};
hardlink_radiobutton={cls="radiobutton";text="硬链接";left=148;top=200;right=212;bottom=224;dl=1;dt=1;z=14};
language_combobox={cls="combobox";left=152;top=128;right=312;bottom=152;aw=1;dl=1;dt=1;edge=1;items={};mode="dropdown";z=5};
language_static={cls="static";text="语言：";left=21;top=128;right=149;bottom=154;align="right";center=1;dl=1;dt=1;font=LOGFONT(h=-14);transparent=1;z=4};
localization={cls="checkbox";text="小开关";left=80;top=336;right=217;bottom=359;db=1;dl=1;z=19};
modctl_groupbox={cls="groupbox";text="模组管理";left=72;top=176;right=320;bottom=232;dl=1;dt=1;edge=1;z=12};
modim_groupbox={cls="groupbox";text="模组导入";left=72;top=240;right=320;bottom=296;dl=1;dt=1;edge=1;z=15};
mods_checkbox={cls="checkbox";text="模组文件夹美化";left=80;top=368;right=224;bottom=391;db=1;dl=1;z=23};
move_radiobutton={cls="radiobutton";text="移动";left=148;top=264;right=212;bottom=288;dl=1;dt=1;z=17};
open_localization_plus={cls="plus";left=48;top=336;right=71;bottom=359;align="left";bgcolor=-5197169;db=1;dl=1;font=LOGFONT(h=-16);iconStyle={font=LOGFONT(h=-14;name='FontAwesome');padding={left=2;top=2}};iconText='\uF07C';notify=1;z=27};
open_plus={cls="plus";text="打开";left=568;top=48;right=632;bottom=74;autohscroll=false;autovscroll=false;bgcolor=16775408;color=3947580;dr=1;dt=1;font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesome');padding={left=7;top=2}};iconText='\uF07C';notify=1;textPadding={left=18};z=3};
refresh_plus={cls="plus";left=48;top=368;right=71;bottom=391;align="left";bgcolor=-5197169;db=1;dl=1;font=LOGFONT(h=-16);iconStyle={font=LOGFONT(h=-14;name='FontAwesome');padding={left=1;top=1}};iconText='\uF01E';notify=1;z=26};
symbolicLink2_radiobutton={cls="radiobutton";text="符号链接";left=224;top=264;right=312;bottom=288;dl=1;dt=1;z=24};
symbolicLink_radiobutton={cls="radiobutton";text="符号链接";left=224;top=200;right=312;bottom=224;dl=1;dt=1;z=25};
zip_info_checkbox={cls="checkbox";text="显示解压信息";left=80;top=304;right=224;bottom=320;db=1;dl=1;z=18};
zip_open_plus={cls="plus";text="打开";left=568;top=88;right=632;bottom=114;autohscroll=false;autovscroll=false;bgcolor=16775408;color=3947580;dr=1;dt=1;font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesome');padding={left=7;top=2}};iconText='\uF07C';notify=1;textPadding={left=18};z=10};
zip_path_plus={cls="plus";left=152;top=88;right=560;bottom=114;align="right";aw=1;border={bottom=1;color=-6908266};dl=1;dr=1;dt=1;font=LOGFONT(h=-13);textPadding={top=6;bottom=2};z=8};
zip_static={cls="static";text="7z目录：";left=21;top=88;right=149;bottom=114;align="right";center=1;dl=1;dt=1;font=LOGFONT(h=-14);transparent=1;z=9}
)
/*}}*/

var skin={
	background={
		active=0xFFD3E0BC;
		default=0x638FB2B0;
		disabled=0xDA6D6D6D;
		hover=0xFF92CEB3		
	}
};
settings.open_localization_plus.skin(skin);
settings.refresh_plus.skin(skin);

var langs=table.array();
var _config = myutil.config.get_config(); 
var _lang = myutil.config.get_langconfig();
var localization_path = null; 
_lang.load_lang("settings",settings,{
	game_static="text";
	open_plus="text";
	language_static="text";
	client_static="text";
	zip_open_plus="text";
	zip_static="text";
	about_button="text";
	modctl_groupbox="text";
	modim_groupbox="text";
	copy_radiobutton="text";
	copy2_radiobutton="text";
	move_radiobutton="text";
	hardlink_radiobutton="text";
	symbolicLink_radiobutton="text";
	symbolicLink2_radiobutton="text";
	mods_checkbox="text";
	zip_info_checkbox="text";
	localization="text";
	db_static="text";
	db_static1="text"
});
table.mix(_config.ui,{
	manage="copy";
	"import"="copy";
	show_unzip_info=true;
	set_mods_LocalizedResourceName=false;
});

settings.modctl_groupbox.group();
settings.modim_groupbox.group();

settings.db_edit.text=_config.db.backup_retention_time;
settings.gamepath_plus.text=_config.path.game;
settings.zip_path_plus.text=_config.path.zip;

//模组导入
if(_config.ui[["import"]]==="copy"){
	settings.copy2_radiobutton.checked=true;
}else if(_config.ui[["import"]]==="move"){
	settings.move_radiobutton.checked=true;
}else{
	settings.symbolicLink2_radiobutton.checked=true;
}

//模组控制
if(_config.ui[["manage"]]==="copy"){
	settings.copy_radiobutton.checked=true;
}else if(_config.ui[["manage"]]==="hardlink") {
	settings.hardlink_radiobutton.checked=true;
}else{
	settings.symbolicLink_radiobutton.checked=true;
}
settings.zip_info_checkbox.checked=_config.ui.show_unzip_info;
settings.mods_checkbox.checked=_config.ui.set_mods_LocalizedResourceName;

check_localization=function(root){
	settings.localization.disabled=true;
	localization_path=null;
	if(not root or root=="")return;
	var p=fsys.searchFile("localization.txt",root,true);
	if(p){
		var s=string.load(p);
		var state=string.match(s,"<localization>\s*?=\s*?(\d)");
		if(state===null){
			debug.log.printf("[settings]:can not match in %s. context: %s",p,s);
			return;
		};
		settings.localization.disabled=false;
		localization_path=p;
		if(tonumber(state)==0){
			settings.localization.checked=false;
		}else {
			settings.localization.checked=true;
		}
	}else {
		debug.log.printf(
		"[settings]:Can not find localization.txt where [p] is %s, [root] is %s",
		tostring(p),tostring(root));
	}
}

check_localization(_config.path.game);

set_LocalizedResourceName=function(){
	import myutil.modCtl;
	import fsys.ini;
	var cats = myutil.modCtl.get_category().get_cats();
	var path=_config.path.data
	fsys.enum( path , "*.*",
		function(dir,filename,fullpath,findData){
			if(not filename){
				var cat=fsys.path.relative(fullpath,path,false);
				cat=table.map(string.split(cat,"\"),lambda(v) tonumber(v));
				var d=cats;
				var r=null;
				for(k,v in cat){
					_,r=table.find(d,lambda(val)val.id==v);
					_,d=table.find(r,lambda(val)table.isArray(val));
				}
				var fp=fsys.joinpath(fullpath,"desktop.ini");
				debug.log.printf("[settings]:add desktop.ini to %s",fullpath);
				var ini=fsys.ini(fp);
				if(ini.read(".ShellClassInfo","LocalizedResourceName")!==(r.name:dir)){
					ini.write(".ShellClassInfo","LocalizedResourceName",r.name:dir);
					debug.log.printf("[settings]:write name [%s] to desktop.ini",r.name:dir);
				}
				var a1=fsys.attrib(fp,,4/*_FILE_ATTRIBUTE_SYSTEM*/|2/*_FILE_ATTRIBUTE_HIDDEN*/);
				var a2=fsys.attrib(fullpath,,4/*_FILE_ATTRIBUTE_SYSTEM*/);
				debug.log.printf("[settings]:attrib file %s to %d, %s to %d",fp,a1,fullpath,a2);
			}
		},
		true
	);
}

clean_LocalizedResourceName=function(){
	var path=_config.path.data
	fsys.enum( path , "*.*",
		function(dir,filename,fullpath,findData){
			if(not filename){
				var a=fsys.attrib(fullpath,4/*_FILE_ATTRIBUTE_SYSTEM*/);
				debug.log.printf("[settings]:attrib path %s to %d",fullpath,a);
			}
		},
		true
	);
}


fsys.enum( _config.path.language, "*.*",
	function(dir,filename,fullpath,findData){ 
		if(not filename){ 
			table.push(langs,dir);
		}
	},
	false
);

settings.language_combobox.items=langs;
settings.language_combobox.selText=_lang.get_now_lang();
settings.client_combobox.items=table.map(_config.ui.client,lambda(v,k) v.name);
settings.client_combobox.selText=_config.ui.now_client;

settings.open_plus.oncommand =function(id,event){
	var path = fsys.dlg.dir(,,'请选择目录')
	if(path){
		debug.log.printf("[settings]:Change game path to %s",path);
		settings.gamepath_plus.text = path;
		_config.path.game=path;
		_config.path.install=io.joinpath(path,_config.path.mod);
		fsys.createDir(_config.path.install,false);
		check_localization(path);
	}	
}

settings.language_combobox.onOk = function(){ 
	var language=settings.language_combobox.selText;
	debug.log.printf("[settings]:Change language to %s",language);
	_config.ui.language=language;
	_lang.reset_lang();
}

settings.client_combobox.onOk = function(){ 
	var index=settings.client_combobox.selIndex;
	debug.log.printf("[settings]:Change client to %s",_config.ui.client[index].name);
	_config.ui.now_client=settings.client_combobox.selText;
	_config.path.mod=_config.ui.client[index].path;
	if(_config.path.game and _config.path.game!=""){
		_config.path.install=io.joinpath(_config.path.game,_config.path.mod);
		fsys.createDir(_config.path.install,false);
	}
}

settings.zip_open_plus.oncommand = function(id,event){
	var path = fsys.dlg.open("7z.exe|7z.exe",'请选择目录')
	if(path){
		settings.zip_path_plus.text = path;
		_config.path.zip=path;
	}
}

settings.about_button.oncommand = function(id,event){	
	var frmChild = settings.loadForm("\dlg\about.aardio");
	frmChild.show();
}

settings.copy_radiobutton.oncommand = function(id,event){
	table.assign(_config.ui,{
		manage="copy";
	});
}

settings.hardlink_radiobutton.oncommand = function(id,event){
	table.assign(_config.ui,{
		manage="hardlink";
	});
	var r=_lang.get_other("settings");
	table.mix(r,{ask_hardlink="使用硬链接请确保本软件和游戏在同一磁盘中！"});
	myutil.dlg.info_dlg(r.ask_hardlink);
}

settings.symbolicLink_radiobutton.oncommand = function(id,event){
	table.assign(_config.ui,{
		manage="symbolicLink";
	});
}

settings.copy2_radiobutton.oncommand = function(id,event){
	table.assign(_config.ui,{
		"import"="copy";
	});
}

settings.move_radiobutton.oncommand = function(id,event){
	table.assign(_config.ui,{
		"import"="move";
	});
}

settings.symbolicLink2_radiobutton.oncommand = function(id,event){
	var r=_lang.get_other("settings");
	table.mix(r,{ask_symbolicLink="请注意，这种方法不被推荐。在继续之前，请确保你清楚自己在做什么!"});
	if(myutil.dlg.ask_dlg(r.ask_symbolicLink)){
		table.assign(_config.ui,{
			"import"="symbolicLink";
		});
	}else {
		settings.symbolicLink2_radiobutton.checked=false;
		if(_config.ui[["import"]]=="move"){
			settings.move_radiobutton.checked=true;
		}else {
			settings.copy2_radiobutton.checked=true;
		}	
	}
}

settings.zip_info_checkbox.oncommand = function(id,event){
	_config.ui.show_unzip_info=owner.checked;
}

settings.localization.oncommand = function(id,event){
	if(not io.exist(localization_path,6))check_localization(_config.path.game);
	if(settings.localization.disabled)return;
	var s=string.load(localization_path);
	if(settings.localization.checked){
		s=string.replace(s,"^(.*?)(<localization>\s*?=\s*?)(\d)(.*?)$","\1\21\4");
	}else {
		s=string.replace(s,"^(.*?)(<localization>\s*?=\s*?)(\d)(.*?)$","\1\20\4");
	}
	debug.log.printf('[settings]:Change localization to %d \n\t%s',settings.localization.checked?1:0,s);
	string.save(localization_path,s);
}

settings.db_edit.onOk = function(){
	var days=tonumber(settings.db_edit.text):0;
	_config.db.backup_retention_time=days>365?365:days;
	settings.db_edit.text=_config.db.backup_retention_time;
	debug.log.printf("[settings]:Change backup retention time to %d days",_config.db.backup_retention_time);
	return true;
}

settings.db_edit.onCancel = function(){ 
	settings.db_edit.text=_config.db.backup_retention_time;
	return true;
}

settings.mods_checkbox.oncommand = function(id,event){
	if(settings.mods_checkbox.checked){
		set_LocalizedResourceName();
		_config.ui.set_mods_LocalizedResourceName=true;
		debug.log.print("[settings]:Set Localized Resource Name");
	}else {
		clean_LocalizedResourceName();
		_config.ui.set_mods_LocalizedResourceName=false;
		debug.log.print("[settings]:Clean Localized Resource Name");
	}
}

settings.refresh_plus.oncommand = function(id,event){
	if(settings.mods_checkbox.checked){
		set_LocalizedResourceName();
		debug.log.print("[settings]:Refresh Localized Resource Name");
	}else {
		clean_LocalizedResourceName();
		debug.log.print("[settings]:Clean Localized Resource Name");
	}
}

settings.open_localization_plus.oncommand = function(id,event){
	import process;
	if(io.exist(localization_path))
		process.exploreSelect(localization_path);
	else {
		var r=_lang.get_other("settings");
		table.mix(r,{can_not_find_file="未找到文件%s"});
		myutil.dlg.info_dlg(string.format(r.can_not_find_file,"localization.txt"));
	}
}

settings.show();
win.loopMessage();
return settings;