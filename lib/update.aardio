//update 更新模块
namespace update;

import web.rest.jsonLiteClient;
import config;
import debug.log;

check_info_update=function(language){
	var http=web.rest.jsonLiteClient();
	var data=null;
	var result=null; 
	for(i=1;3;1){
		data=http.get(..string.format(config.__api_category.main,language)):
		http.get(..string.format(config.__api_category.main_jsdeliver,language));
		if(data){
			import time;
			var t=time(data[["date"]],"!%Y-%m-%d-%H-%M-%S");
			t=t.local(true);
			t.format="%y/%m/%d %H:%M:%S"
			result=tostring(t);
			break;
		}
	}
	return result; 
}

check_app_update=function(){
	import web.rest.htmlClient;
	var http=web.rest.jsonLiteClient();
	var http1=web.rest.htmlClient();
	var data=null;
	var result=null;
	for(i=1;3;1){
		data=http.get(config.__api[1]);
		if(data){
			result=..string.slice(data[1].tag_name,2);
			break;
		}else {
			data=http1.get(config.__api[2]);
			if(data){
				result=..string.slice(data.queryEles(tagName = "option")[1].value,23);
				break;
			}
		};
	}
	return result;
}

download_info=function(version,language){
	//import console;
	import crypt.bin;
	
	//console.open();
	var address=..string.format(config.__api_category.download,language);
	var http=web.rest.jsonLiteClient();
	var data = null;
	var result = null; 
	for(i=1;3;1){
		data=http.get(address);
		if(data){
			result=crypt.bin.decodeBase64(data.content);
			break;
		}else {
			data=http.get(..string.format(config.__api_category.download_jsdeliver,language));
			if(data){result=..web.json.stringify(data);break;}
		};
	}
	if(result){
		//console.log(result);
		return ..string.save("\config\category.json",result);
	}else {
		return false; 
	}
}

