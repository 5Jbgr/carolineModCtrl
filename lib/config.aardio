//config 配置文件
import fsys.config;
config  = fsys.config("/config/"); 
//config  = fsys.config( io.appData("/软件作者/应用程序名/") ); 

//不需要序列化的配置名字前请添加下划线
namespace config {
	__appName = '卡罗琳模组管理器';
	__appName_en = 'Caroline Mod Manager';
	__website = "https://github.com/5Jbgr/carolineModCtrl";
	__website_category="https://github.com/5Jbgr/SBCinfo";
	__version = "0.4.11";
	__api={"https://api.github.com/repos/5Jbgr/carolineModCtrl/releases";
		   "https://gcore.jsdelivr.net/gh/5Jbgr/carolineModCtrl@main/"};
	__api_category={
		main="https://raw.githubusercontent.com/5Jbgr/SBCinfo/main/%s/update-info";
		main_jsdeliver="https://gcore.jsdelivr.net/gh/5Jbgr/SBCinfo@main/%s/update-info";
		download="https://api.github.com/repos/5Jbgr/SBCinfo/contents/%s/category.json";
		download_jsdeliver="https://gcore.jsdelivr.net/gh/5Jbgr/SBCinfo@main/%s/category.json"
	};
}

/**intellisense(config)
__appName = 应用程序名
__website = 官方网站
saveAll() = 写入所有配置到文件
? = 获取值时指定不以下划线开始的配置表名称，\n返回一个可自动序列化到同名配置文件的表对象。\n如果此对象名以下划线开始，则可以正常读写值不会序列化为配置文件。\n否则不能对此对象直接赋值，只能对配置表对象的成员赋值。\n\n配置表可自动自文件加载,退出线程前自动序列化并存入文件。\n仅序列化以字符串、数值为键的元素，\n仅序列化值为字符串、数值、buffer 以及定义了 _serialize 元方法的成员。\n循环引用的值转换为 null，序列化时忽略成员函数\n!fsys_table.
end intellisense**/